"""empty message

Revision ID: 6f8d3b6426aa
Revises: 81e0f3f095f5
Create Date: 2025-02-13 11:07:43.487227

"""

from collections.abc import Sequence

from alembic import op

# revision identifiers, used by Alembic.
revision: str = "6f8d3b6426aa"
down_revision: str | None = "81e0f3f095f5"
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_index(op.f("ix_agent_creation_date"), "agent", ["creation_date"], unique=False)
    op.create_index(
        op.f("ix_annotation_annotation_body_id"), "annotation", ["annotation_body_id"], unique=False
    )
    op.create_index(
        op.f("ix_annotation_creation_date"), "annotation", ["creation_date"], unique=False
    )
    op.create_index(op.f("ix_annotation_entity_id"), "annotation", ["entity_id"], unique=False)
    op.create_index(
        op.f("ix_annotation_body_creation_date"), "annotation_body", ["creation_date"], unique=False
    )
    op.create_index(
        op.f("ix_brain_region_creation_date"), "brain_region", ["creation_date"], unique=False
    )
    op.create_index(op.f("ix_contribution_agent_id"), "contribution", ["agent_id"], unique=False)
    op.create_index(
        op.f("ix_contribution_creation_date"), "contribution", ["creation_date"], unique=False
    )
    op.create_index(op.f("ix_contribution_entity_id"), "contribution", ["entity_id"], unique=False)
    op.create_index(op.f("ix_contribution_role_id"), "contribution", ["role_id"], unique=False)
    op.create_index(
        op.f("ix_emodel_brain_location_id"), "emodel", ["brain_location_id"], unique=False
    )
    op.create_index(op.f("ix_emodel_brain_region_id"), "emodel", ["brain_region_id"], unique=False)
    op.create_index(op.f("ix_emodel_species_id"), "emodel", ["species_id"], unique=False)
    op.create_index(op.f("ix_emodel_strain_id"), "emodel", ["strain_id"], unique=False)
    op.create_index(op.f("ix_entity_createdBy_id"), "entity", ["createdBy_id"], unique=False)
    op.create_index(op.f("ix_entity_creation_date"), "entity", ["creation_date"], unique=False)
    op.create_index(op.f("ix_entity_updatedBy_id"), "entity", ["updatedBy_id"], unique=False)
    op.create_index(
        op.f("ix_experimental_bouton_density_brain_location_id"),
        "experimental_bouton_density",
        ["brain_location_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_experimental_bouton_density_brain_region_id"),
        "experimental_bouton_density",
        ["brain_region_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_experimental_bouton_density_license_id"),
        "experimental_bouton_density",
        ["license_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_experimental_bouton_density_species_id"),
        "experimental_bouton_density",
        ["species_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_experimental_bouton_density_strain_id"),
        "experimental_bouton_density",
        ["strain_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_experimental_neuron_density_brain_location_id"),
        "experimental_neuron_density",
        ["brain_location_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_experimental_neuron_density_brain_region_id"),
        "experimental_neuron_density",
        ["brain_region_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_experimental_neuron_density_license_id"),
        "experimental_neuron_density",
        ["license_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_experimental_neuron_density_species_id"),
        "experimental_neuron_density",
        ["species_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_experimental_neuron_density_strain_id"),
        "experimental_neuron_density",
        ["strain_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_experimental_synapses_per_connection_brain_location_id"),
        "experimental_synapses_per_connection",
        ["brain_location_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_experimental_synapses_per_connection_brain_region_id"),
        "experimental_synapses_per_connection",
        ["brain_region_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_experimental_synapses_per_connection_license_id"),
        "experimental_synapses_per_connection",
        ["license_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_experimental_synapses_per_connection_species_id"),
        "experimental_synapses_per_connection",
        ["species_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_experimental_synapses_per_connection_strain_id"),
        "experimental_synapses_per_connection",
        ["strain_id"],
        unique=False,
    )
    op.create_index(op.f("ix_license_creation_date"), "license", ["creation_date"], unique=False)
    op.create_index(
        op.f("ix_measurement_morphology_feature_annotation_id"),
        "measurement",
        ["morphology_feature_annotation_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_measurement_serie_element_measurement_id"),
        "measurement_serie_element",
        ["measurement_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_memodel_brain_location_id"), "memodel", ["brain_location_id"], unique=False
    )
    op.create_index(
        op.f("ix_memodel_brain_region_id"), "memodel", ["brain_region_id"], unique=False
    )
    op.create_index(op.f("ix_mesh_brain_region_id"), "mesh", ["brain_region_id"], unique=False)
    op.drop_constraint(
        "uq_morphology_feature_annotation_reconstruction_morphology_id",
        "morphology_feature_annotation",
        type_="unique",
    )
    op.create_index(
        op.f("ix_morphology_feature_annotation_creation_date"),
        "morphology_feature_annotation",
        ["creation_date"],
        unique=False,
    )
    op.create_index(
        op.f("ix_morphology_feature_annotation_reconstruction_morphology_id"),
        "morphology_feature_annotation",
        ["reconstruction_morphology_id"],
        unique=True,
    )
    op.create_index(
        op.f("ix_reconstruction_morphology_brain_location_id"),
        "reconstruction_morphology",
        ["brain_location_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_reconstruction_morphology_brain_region_id"),
        "reconstruction_morphology",
        ["brain_region_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_reconstruction_morphology_license_id"),
        "reconstruction_morphology",
        ["license_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_reconstruction_morphology_species_id"),
        "reconstruction_morphology",
        ["species_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_reconstruction_morphology_strain_id"),
        "reconstruction_morphology",
        ["strain_id"],
        unique=False,
    )
    op.create_index(op.f("ix_role_creation_date"), "role", ["creation_date"], unique=False)
    op.create_index(
        op.f("ix_single_cell_experimental_trace_brain_location_id"),
        "single_cell_experimental_trace",
        ["brain_location_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_single_cell_experimental_trace_brain_region_id"),
        "single_cell_experimental_trace",
        ["brain_region_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_single_cell_experimental_trace_license_id"),
        "single_cell_experimental_trace",
        ["license_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_single_cell_experimental_trace_species_id"),
        "single_cell_experimental_trace",
        ["species_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_single_cell_experimental_trace_strain_id"),
        "single_cell_experimental_trace",
        ["strain_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_single_neuron_simulation_brain_location_id"),
        "single_neuron_simulation",
        ["brain_location_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_single_neuron_simulation_brain_region_id"),
        "single_neuron_simulation",
        ["brain_region_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_single_neuron_simulation_me_model_id"),
        "single_neuron_simulation",
        ["me_model_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_single_neuron_synaptome_brain_location_id"),
        "single_neuron_synaptome",
        ["brain_location_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_single_neuron_synaptome_brain_region_id"),
        "single_neuron_synaptome",
        ["brain_region_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_single_neuron_synaptome_me_model_id"),
        "single_neuron_synaptome",
        ["me_model_id"],
        unique=False,
    )
    op.create_index(op.f("ix_species_creation_date"), "species", ["creation_date"], unique=False)
    op.create_index(op.f("ix_strain_creation_date"), "strain", ["creation_date"], unique=False)
    op.create_index(op.f("ix_strain_species_id"), "strain", ["species_id"], unique=False)
    op.create_index(op.f("ix_subject_creation_date"), "subject", ["creation_date"], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_subject_creation_date"), table_name="subject")
    op.drop_index(op.f("ix_strain_species_id"), table_name="strain")
    op.drop_index(op.f("ix_strain_creation_date"), table_name="strain")
    op.drop_index(op.f("ix_species_creation_date"), table_name="species")
    op.drop_index(
        op.f("ix_single_neuron_synaptome_me_model_id"), table_name="single_neuron_synaptome"
    )
    op.drop_index(
        op.f("ix_single_neuron_synaptome_brain_region_id"), table_name="single_neuron_synaptome"
    )
    op.drop_index(
        op.f("ix_single_neuron_synaptome_brain_location_id"), table_name="single_neuron_synaptome"
    )
    op.drop_index(
        op.f("ix_single_neuron_simulation_me_model_id"), table_name="single_neuron_simulation"
    )
    op.drop_index(
        op.f("ix_single_neuron_simulation_brain_region_id"), table_name="single_neuron_simulation"
    )
    op.drop_index(
        op.f("ix_single_neuron_simulation_brain_location_id"), table_name="single_neuron_simulation"
    )
    op.drop_index(
        op.f("ix_single_cell_experimental_trace_strain_id"),
        table_name="single_cell_experimental_trace",
    )
    op.drop_index(
        op.f("ix_single_cell_experimental_trace_species_id"),
        table_name="single_cell_experimental_trace",
    )
    op.drop_index(
        op.f("ix_single_cell_experimental_trace_license_id"),
        table_name="single_cell_experimental_trace",
    )
    op.drop_index(
        op.f("ix_single_cell_experimental_trace_brain_region_id"),
        table_name="single_cell_experimental_trace",
    )
    op.drop_index(
        op.f("ix_single_cell_experimental_trace_brain_location_id"),
        table_name="single_cell_experimental_trace",
    )
    op.drop_index(op.f("ix_role_creation_date"), table_name="role")
    op.drop_index(
        op.f("ix_reconstruction_morphology_strain_id"), table_name="reconstruction_morphology"
    )
    op.drop_index(
        op.f("ix_reconstruction_morphology_species_id"), table_name="reconstruction_morphology"
    )
    op.drop_index(
        op.f("ix_reconstruction_morphology_license_id"), table_name="reconstruction_morphology"
    )
    op.drop_index(
        op.f("ix_reconstruction_morphology_brain_region_id"), table_name="reconstruction_morphology"
    )
    op.drop_index(
        op.f("ix_reconstruction_morphology_brain_location_id"),
        table_name="reconstruction_morphology",
    )
    op.drop_index(
        op.f("ix_morphology_feature_annotation_reconstruction_morphology_id"),
        table_name="morphology_feature_annotation",
    )
    op.drop_index(
        op.f("ix_morphology_feature_annotation_creation_date"),
        table_name="morphology_feature_annotation",
    )
    op.create_unique_constraint(
        "uq_morphology_feature_annotation_reconstruction_morphology_id",
        "morphology_feature_annotation",
        ["reconstruction_morphology_id"],
    )
    op.drop_index(op.f("ix_mesh_brain_region_id"), table_name="mesh")
    op.drop_index(op.f("ix_memodel_brain_region_id"), table_name="memodel")
    op.drop_index(op.f("ix_memodel_brain_location_id"), table_name="memodel")
    op.drop_index(
        op.f("ix_measurement_serie_element_measurement_id"), table_name="measurement_serie_element"
    )
    op.drop_index(op.f("ix_measurement_morphology_feature_annotation_id"), table_name="measurement")
    op.drop_index(op.f("ix_license_creation_date"), table_name="license")
    op.drop_index(
        op.f("ix_experimental_synapses_per_connection_strain_id"),
        table_name="experimental_synapses_per_connection",
    )
    op.drop_index(
        op.f("ix_experimental_synapses_per_connection_species_id"),
        table_name="experimental_synapses_per_connection",
    )
    op.drop_index(
        op.f("ix_experimental_synapses_per_connection_license_id"),
        table_name="experimental_synapses_per_connection",
    )
    op.drop_index(
        op.f("ix_experimental_synapses_per_connection_brain_region_id"),
        table_name="experimental_synapses_per_connection",
    )
    op.drop_index(
        op.f("ix_experimental_synapses_per_connection_brain_location_id"),
        table_name="experimental_synapses_per_connection",
    )
    op.drop_index(
        op.f("ix_experimental_neuron_density_strain_id"), table_name="experimental_neuron_density"
    )
    op.drop_index(
        op.f("ix_experimental_neuron_density_species_id"), table_name="experimental_neuron_density"
    )
    op.drop_index(
        op.f("ix_experimental_neuron_density_license_id"), table_name="experimental_neuron_density"
    )
    op.drop_index(
        op.f("ix_experimental_neuron_density_brain_region_id"),
        table_name="experimental_neuron_density",
    )
    op.drop_index(
        op.f("ix_experimental_neuron_density_brain_location_id"),
        table_name="experimental_neuron_density",
    )
    op.drop_index(
        op.f("ix_experimental_bouton_density_strain_id"), table_name="experimental_bouton_density"
    )
    op.drop_index(
        op.f("ix_experimental_bouton_density_species_id"), table_name="experimental_bouton_density"
    )
    op.drop_index(
        op.f("ix_experimental_bouton_density_license_id"), table_name="experimental_bouton_density"
    )
    op.drop_index(
        op.f("ix_experimental_bouton_density_brain_region_id"),
        table_name="experimental_bouton_density",
    )
    op.drop_index(
        op.f("ix_experimental_bouton_density_brain_location_id"),
        table_name="experimental_bouton_density",
    )
    op.drop_index(op.f("ix_entity_updatedBy_id"), table_name="entity")
    op.drop_index(op.f("ix_entity_creation_date"), table_name="entity")
    op.drop_index(op.f("ix_entity_createdBy_id"), table_name="entity")
    op.drop_index(op.f("ix_emodel_strain_id"), table_name="emodel")
    op.drop_index(op.f("ix_emodel_species_id"), table_name="emodel")
    op.drop_index(op.f("ix_emodel_brain_region_id"), table_name="emodel")
    op.drop_index(op.f("ix_emodel_brain_location_id"), table_name="emodel")
    op.drop_index(op.f("ix_contribution_role_id"), table_name="contribution")
    op.drop_index(op.f("ix_contribution_entity_id"), table_name="contribution")
    op.drop_index(op.f("ix_contribution_creation_date"), table_name="contribution")
    op.drop_index(op.f("ix_contribution_agent_id"), table_name="contribution")
    op.drop_index(op.f("ix_brain_region_creation_date"), table_name="brain_region")
    op.drop_index(op.f("ix_annotation_body_creation_date"), table_name="annotation_body")
    op.drop_index(op.f("ix_annotation_entity_id"), table_name="annotation")
    op.drop_index(op.f("ix_annotation_creation_date"), table_name="annotation")
    op.drop_index(op.f("ix_annotation_annotation_body_id"), table_name="annotation")
    op.drop_index(op.f("ix_agent_creation_date"), table_name="agent")
    # ### end Alembic commands ###
