"""empty message

Revision ID: b36a69f3b5e4
Revises: b300b17671e3
Create Date: 2025-02-18 14:01:27.128399

"""

from collections.abc import Sequence

import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

import app.db.types
from alembic import op

# revision identifiers, used by Alembic.
revision: str = "b36a69f3b5e4"
down_revision: str | None = "b300b17671e3"
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "annotation_root",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("annotation_body_id", sa.Integer(), nullable=False),
        sa.Column("entity_id", sa.Integer(), nullable=False),
        sa.Column("project_id", sa.Uuid(), nullable=False),
        sa.Column("type", sa.String(), nullable=False),
        sa.Column("legacy_id", app.db.types.StringListType(), nullable=True),
        sa.Column(
            "creation_date",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "update_date",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["annotation_body_id"],
            ["annotation_body.id"],
            name=op.f("fk_annotation_root_annotation_body_id_annotation_body"),
        ),
        sa.ForeignKeyConstraint(
            ["entity_id"], ["entity.id"], name=op.f("fk_annotation_root_entity_id_entity")
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_annotation_root")),
    )
    op.create_index(
        op.f("ix_annotation_root_annotation_body_id"),
        "annotation_root",
        ["annotation_body_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_annotation_root_creation_date"), "annotation_root", ["creation_date"], unique=False
    )
    op.create_index(
        op.f("ix_annotation_root_entity_id"), "annotation_root", ["entity_id"], unique=False
    )
    op.create_index(op.f("ix_annotation_root_id"), "annotation_root", ["id"], unique=False)
    op.create_index(
        op.f("ix_annotation_root_legacy_id"), "annotation_root", ["legacy_id"], unique=False
    )
    op.create_table(
        "annotation_etype",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.ForeignKeyConstraint(
            ["id"], ["annotation_root.id"], name=op.f("fk_annotation_etype_id_annotation_root")
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_annotation_etype")),
    )
    op.create_index(op.f("ix_annotation_etype_id"), "annotation_etype", ["id"], unique=False)
    op.create_table(
        "annotation_mtype",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.ForeignKeyConstraint(
            ["id"], ["annotation_root.id"], name=op.f("fk_annotation_mtype_id_annotation_root")
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_annotation_mtype")),
    )
    op.create_index(op.f("ix_annotation_mtype_id"), "annotation_mtype", ["id"], unique=False)
    op.create_table(
        "annotation_note",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("note", sa.String(), nullable=True),
        sa.ForeignKeyConstraint(
            ["id"], ["annotation_root.id"], name=op.f("fk_annotation_note_id_annotation_root")
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_annotation_note")),
    )
    op.create_index(op.f("ix_annotation_note_id"), "annotation_note", ["id"], unique=False)
    op.drop_index("ix_annotation_annotation_body_id", table_name="annotation")
    op.drop_index("ix_annotation_creation_date", table_name="annotation")
    op.drop_index("ix_annotation_entity_id", table_name="annotation")
    op.drop_index("ix_annotation_id", table_name="annotation")
    op.drop_index("ix_annotation_legacy_id", table_name="annotation")
    op.drop_table("annotation")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "annotation",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("note", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("entity_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("annotation_body_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("legacy_id", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column(
            "creation_date",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "update_date",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["annotation_body_id"],
            ["annotation_body.id"],
            name="fk_annotation_annotation_body_id_annotation_body",
        ),
        sa.ForeignKeyConstraint(
            ["entity_id"], ["entity.id"], name="fk_annotation_entity_id_entity"
        ),
        sa.PrimaryKeyConstraint("id", name="pk_annotation"),
    )
    op.create_index("ix_annotation_legacy_id", "annotation", ["legacy_id"], unique=False)
    op.create_index("ix_annotation_id", "annotation", ["id"], unique=False)
    op.create_index("ix_annotation_entity_id", "annotation", ["entity_id"], unique=False)
    op.create_index("ix_annotation_creation_date", "annotation", ["creation_date"], unique=False)
    op.create_index(
        "ix_annotation_annotation_body_id", "annotation", ["annotation_body_id"], unique=False
    )
    op.drop_index(op.f("ix_annotation_note_id"), table_name="annotation_note")
    op.drop_table("annotation_note")
    op.drop_index(op.f("ix_annotation_mtype_id"), table_name="annotation_mtype")
    op.drop_table("annotation_mtype")
    op.drop_index(op.f("ix_annotation_etype_id"), table_name="annotation_etype")
    op.drop_table("annotation_etype")
    op.drop_index(op.f("ix_annotation_root_legacy_id"), table_name="annotation_root")
    op.drop_index(op.f("ix_annotation_root_id"), table_name="annotation_root")
    op.drop_index(op.f("ix_annotation_root_entity_id"), table_name="annotation_root")
    op.drop_index(op.f("ix_annotation_root_creation_date"), table_name="annotation_root")
    op.drop_index(op.f("ix_annotation_root_annotation_body_id"), table_name="annotation_root")
    op.drop_table("annotation_root")
    # ### end Alembic commands ###
