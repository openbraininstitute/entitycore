"""empty message

Revision ID: 48378d76d7b0
Revises: 1de0e9a0a8e1
Create Date: 2025-02-25 16:34:55.517206

"""

from collections.abc import Sequence

import sqlalchemy as sa

import app.db.types
from alembic import op

# revision identifiers, used by Alembic.
revision: str = "48378d76d7b0"
down_revision: str | None = "1de0e9a0a8e1"
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index("ix_brain_location_id", table_name="brain_location")
    op.drop_index("ix_emodel_brain_location_id", table_name="emodel")
    op.drop_constraint("fk_emodel_brain_location_id_brain_location", "emodel", type_="foreignkey")
    op.drop_column("emodel", "brain_location_id")
    op.drop_index(
        "ix_experimental_bouton_density_brain_location_id", table_name="experimental_bouton_density"
    )
    op.drop_constraint(
        "fk_experimental_bouton_density_brain_location_id_brain_location",
        "experimental_bouton_density",
        type_="foreignkey",
    )
    op.drop_column("experimental_bouton_density", "brain_location_id")
    op.drop_index(
        "ix_experimental_neuron_density_brain_location_id", table_name="experimental_neuron_density"
    )
    op.drop_constraint(
        "fk_experimental_neuron_density_brain_location_id_brain_location",
        "experimental_neuron_density",
        type_="foreignkey",
    )
    op.drop_column("experimental_neuron_density", "brain_location_id")
    op.drop_index(
        "ix_experimental_synapses_per_connection_brain_location_id",
        table_name="experimental_synapses_per_connection",
    )
    op.drop_constraint(
        "fk_experimental_synapses_per_connection_brain_location__e1ff",
        "experimental_synapses_per_connection",
        type_="foreignkey",
    )
    op.drop_column("experimental_synapses_per_connection", "brain_location_id")
    op.drop_index("ix_memodel_brain_location_id", table_name="memodel")
    op.drop_constraint("fk_memodel_brain_location_id_brain_location", "memodel", type_="foreignkey")
    op.drop_column("memodel", "brain_location_id")
    op.add_column(
        "reconstruction_morphology",
        sa.Column("location", app.db.types.PointLocationType(astext_type=sa.Text()), nullable=True),
    )
    op.drop_index(
        "ix_reconstruction_morphology_brain_location_id", table_name="reconstruction_morphology"
    )
    op.drop_constraint(
        "fk_reconstruction_morphology_brain_location_id_brain_location",
        "reconstruction_morphology",
        type_="foreignkey",
    )
    op.drop_column("reconstruction_morphology", "brain_location_id")
    op.drop_index(
        "ix_single_cell_experimental_trace_brain_location_id",
        table_name="single_cell_experimental_trace",
    )
    op.drop_constraint(
        "fk_single_cell_experimental_trace_brain_location_id_bra_1c6c",
        "single_cell_experimental_trace",
        type_="foreignkey",
    )
    op.drop_column("single_cell_experimental_trace", "brain_location_id")
    op.drop_index(
        "ix_single_neuron_simulation_brain_location_id", table_name="single_neuron_simulation"
    )
    op.drop_constraint(
        "fk_single_neuron_simulation_brain_location_id_brain_location",
        "single_neuron_simulation",
        type_="foreignkey",
    )
    op.drop_column("single_neuron_simulation", "brain_location_id")
    op.drop_index(
        "ix_single_neuron_synaptome_brain_location_id", table_name="single_neuron_synaptome"
    )
    op.drop_constraint(
        "fk_single_neuron_synaptome_brain_location_id_brain_location",
        "single_neuron_synaptome",
        type_="foreignkey",
    )
    op.drop_column("single_neuron_synaptome", "brain_location_id")

    op.drop_table("brain_location")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "single_neuron_synaptome",
        sa.Column("brain_location_id", sa.INTEGER(), autoincrement=False, nullable=True),
    )
    op.create_foreign_key(
        "fk_single_neuron_synaptome_brain_location_id_brain_location",
        "single_neuron_synaptome",
        "brain_location",
        ["brain_location_id"],
        ["id"],
    )
    op.create_index(
        "ix_single_neuron_synaptome_brain_location_id",
        "single_neuron_synaptome",
        ["brain_location_id"],
        unique=False,
    )
    op.add_column(
        "single_neuron_simulation",
        sa.Column("brain_location_id", sa.INTEGER(), autoincrement=False, nullable=True),
    )
    op.create_foreign_key(
        "fk_single_neuron_simulation_brain_location_id_brain_location",
        "single_neuron_simulation",
        "brain_location",
        ["brain_location_id"],
        ["id"],
    )
    op.create_index(
        "ix_single_neuron_simulation_brain_location_id",
        "single_neuron_simulation",
        ["brain_location_id"],
        unique=False,
    )
    op.add_column(
        "single_cell_experimental_trace",
        sa.Column("brain_location_id", sa.INTEGER(), autoincrement=False, nullable=True),
    )
    op.create_foreign_key(
        "fk_single_cell_experimental_trace_brain_location_id_bra_1c6c",
        "single_cell_experimental_trace",
        "brain_location",
        ["brain_location_id"],
        ["id"],
    )
    op.create_index(
        "ix_single_cell_experimental_trace_brain_location_id",
        "single_cell_experimental_trace",
        ["brain_location_id"],
        unique=False,
    )
    op.add_column(
        "reconstruction_morphology",
        sa.Column("brain_location_id", sa.INTEGER(), autoincrement=False, nullable=True),
    )
    op.create_foreign_key(
        "fk_reconstruction_morphology_brain_location_id_brain_location",
        "reconstruction_morphology",
        "brain_location",
        ["brain_location_id"],
        ["id"],
    )
    op.create_index(
        "ix_reconstruction_morphology_brain_location_id",
        "reconstruction_morphology",
        ["brain_location_id"],
        unique=False,
    )
    op.drop_column("reconstruction_morphology", "location")
    op.add_column(
        "memodel", sa.Column("brain_location_id", sa.INTEGER(), autoincrement=False, nullable=True)
    )
    op.create_foreign_key(
        "fk_memodel_brain_location_id_brain_location",
        "memodel",
        "brain_location",
        ["brain_location_id"],
        ["id"],
    )
    op.create_index("ix_memodel_brain_location_id", "memodel", ["brain_location_id"], unique=False)
    op.add_column(
        "experimental_synapses_per_connection",
        sa.Column("brain_location_id", sa.INTEGER(), autoincrement=False, nullable=True),
    )
    op.create_foreign_key(
        "fk_experimental_synapses_per_connection_brain_location__e1ff",
        "experimental_synapses_per_connection",
        "brain_location",
        ["brain_location_id"],
        ["id"],
    )
    op.create_index(
        "ix_experimental_synapses_per_connection_brain_location_id",
        "experimental_synapses_per_connection",
        ["brain_location_id"],
        unique=False,
    )
    op.add_column(
        "experimental_neuron_density",
        sa.Column("brain_location_id", sa.INTEGER(), autoincrement=False, nullable=True),
    )
    op.create_foreign_key(
        "fk_experimental_neuron_density_brain_location_id_brain_location",
        "experimental_neuron_density",
        "brain_location",
        ["brain_location_id"],
        ["id"],
    )
    op.create_index(
        "ix_experimental_neuron_density_brain_location_id",
        "experimental_neuron_density",
        ["brain_location_id"],
        unique=False,
    )
    op.add_column(
        "experimental_bouton_density",
        sa.Column("brain_location_id", sa.INTEGER(), autoincrement=False, nullable=True),
    )
    op.create_foreign_key(
        "fk_experimental_bouton_density_brain_location_id_brain_location",
        "experimental_bouton_density",
        "brain_location",
        ["brain_location_id"],
        ["id"],
    )
    op.create_index(
        "ix_experimental_bouton_density_brain_location_id",
        "experimental_bouton_density",
        ["brain_location_id"],
        unique=False,
    )
    op.add_column(
        "emodel", sa.Column("brain_location_id", sa.INTEGER(), autoincrement=False, nullable=True)
    )
    op.create_foreign_key(
        "fk_emodel_brain_location_id_brain_location",
        "emodel",
        "brain_location",
        ["brain_location_id"],
        ["id"],
    )
    op.create_index("ix_emodel_brain_location_id", "emodel", ["brain_location_id"], unique=False)
    op.create_table(
        "brain_location",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("x", sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
        sa.Column("y", sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
        sa.Column("z", sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint("id", name="pk_brain_location"),
    )
    op.create_index("ix_brain_location_id", "brain_location", ["id"], unique=False)
    # ### end Alembic commands ###
