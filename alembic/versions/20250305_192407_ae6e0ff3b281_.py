"""empty message

Revision ID: ae6e0ff3b281
Revises: bde990f45411
Create Date: 2025-03-05 19:24:07.127759

"""

from collections.abc import Sequence

import sqlalchemy as sa
from alembic_utils.pg_trigger import PGTrigger

from alembic import op

# revision identifiers, used by Alembic.
revision: str = "ae6e0ff3b281"
down_revision: str | None = "bde990f45411"
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_index(
        "ix_asset_full_path",
        "asset",
        ["full_path"],
        unique=True,
        postgresql_where=sa.text("status != 'DELETED'"),
    )
    public_reconstruction_morphology_morphology_description_vector = PGTrigger(
        schema="public",
        signature="morphology_description_vector",
        on_entity="public.reconstruction_morphology",
        is_constraint=False,
        definition="BEFORE INSERT OR UPDATE ON reconstruction_morphology\n            FOR EACH ROW EXECUTE FUNCTION\n                tsvector_update_trigger(morphology_description_vector, 'pg_catalog.english', description, name)",
    )
    op.create_entity(public_reconstruction_morphology_morphology_description_vector)

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    public_reconstruction_morphology_morphology_description_vector = PGTrigger(
        schema="public",
        signature="morphology_description_vector",
        on_entity="public.reconstruction_morphology",
        is_constraint=False,
        definition="BEFORE INSERT OR UPDATE ON reconstruction_morphology\n            FOR EACH ROW EXECUTE FUNCTION\n                tsvector_update_trigger(morphology_description_vector, 'pg_catalog.english', description, name)",
    )
    op.drop_entity(public_reconstruction_morphology_morphology_description_vector)

    op.drop_index(
        "ix_asset_full_path", table_name="asset", postgresql_where=sa.text("status != 'DELETED'")
    )
    # ### end Alembic commands ###
