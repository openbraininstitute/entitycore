"""empty message

Revision ID: 15a98026fcbd
Revises: 348ca126aedb
Create Date: 2025-03-17 12:40:21.734438

"""

from collections.abc import Sequence

import sqlalchemy as sa
from alembic_utils.pg_trigger import PGTrigger
from sqlalchemy.dialects import postgresql

from alembic import op

# revision identifiers, used by Alembic.
revision: str = "15a98026fcbd"
down_revision: str | None = "348ca126aedb"
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "etype_class",
        sa.Column("id", sa.Integer(), sa.Identity(always=False), nullable=False),
        sa.Column("pref_label", sa.String(), nullable=False),
        sa.Column("definition", sa.String(), nullable=False),
        sa.Column("alt_label", sa.String(), nullable=True),
        sa.Column("legacy_id", sa.ARRAY(sa.VARCHAR()), nullable=True),
        sa.Column("legacy_self", sa.ARRAY(sa.VARCHAR()), nullable=True),
        sa.Column(
            "creation_date",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "update_date",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_etype_class")),
    )
    op.create_index(
        op.f("ix_etype_class_creation_date"), "etype_class", ["creation_date"], unique=False
    )
    op.create_index(op.f("ix_etype_class_legacy_id"), "etype_class", ["legacy_id"], unique=False)
    op.create_index(op.f("ix_etype_class_pref_label"), "etype_class", ["pref_label"], unique=True)
    op.create_table(
        "etype_classification",
        sa.Column("etype_class_id", sa.Integer(), nullable=False),
        sa.Column("id", sa.Integer(), sa.Identity(always=False), nullable=False),
        sa.Column("createdBy_id", sa.Integer(), nullable=True),
        sa.Column("updatedBy_id", sa.Integer(), nullable=True),
        sa.Column("entity_id", sa.Integer(), nullable=False),
        sa.Column(
            "creation_date",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "update_date",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["createdBy_id"], ["agent.id"], name=op.f("fk_etype_classification_createdBy_id_agent")
        ),
        sa.ForeignKeyConstraint(
            ["entity_id"], ["entity.id"], name=op.f("fk_etype_classification_entity_id_entity")
        ),
        sa.ForeignKeyConstraint(
            ["etype_class_id"],
            ["etype_class.id"],
            name=op.f("fk_etype_classification_etype_class_id_etype_class"),
        ),
        sa.ForeignKeyConstraint(
            ["updatedBy_id"], ["agent.id"], name=op.f("fk_etype_classification_updatedBy_id_agent")
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_etype_classification")),
    )
    op.create_index(
        op.f("ix_etype_classification_createdBy_id"),
        "etype_classification",
        ["createdBy_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_etype_classification_creation_date"),
        "etype_classification",
        ["creation_date"],
        unique=False,
    )
    op.create_index(
        op.f("ix_etype_classification_entity_id"),
        "etype_classification",
        ["entity_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_etype_classification_etype_class_id"),
        "etype_classification",
        ["etype_class_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_etype_classification_updatedBy_id"),
        "etype_classification",
        ["updatedBy_id"],
        unique=False,
    )
    op.drop_index("ix_etype_annotation_body_pref_label", table_name="etype_annotation_body")
    op.drop_table("etype_annotation_body")
    op.add_column("emodel", sa.Column("description_vector", postgresql.TSVECTOR(), nullable=True))
    op.add_column("emodel", sa.Column("exemplar_morphology_id", sa.Integer(), nullable=False))
    op.create_foreign_key(
        op.f("fk_emodel_exemplar_morphology_id_reconstruction_morphology"),
        "emodel",
        "reconstruction_morphology",
        ["exemplar_morphology_id"],
        ["id"],
    )
    public_emodel_emodel_description_vector = PGTrigger(
        schema="public",
        signature="emodel_description_vector",
        on_entity="public.emodel",
        is_constraint=False,
        definition="BEFORE INSERT OR UPDATE ON emodel\n            FOR EACH ROW EXECUTE FUNCTION\n                tsvector_update_trigger(description_vector, 'pg_catalog.english', description, name)",
    )
    op.create_entity(public_emodel_emodel_description_vector)

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    public_emodel_emodel_description_vector = PGTrigger(
        schema="public",
        signature="emodel_description_vector",
        on_entity="public.emodel",
        is_constraint=False,
        definition="BEFORE INSERT OR UPDATE ON emodel\n            FOR EACH ROW EXECUTE FUNCTION\n                tsvector_update_trigger(description_vector, 'pg_catalog.english', description, name)",
    )
    op.drop_entity(public_emodel_emodel_description_vector)

    op.drop_constraint(
        op.f("fk_emodel_exemplar_morphology_id_reconstruction_morphology"),
        "emodel",
        type_="foreignkey",
    )
    op.drop_column("emodel", "exemplar_morphology_id")
    op.drop_column("emodel", "description_vector")
    op.create_table(
        "etype_annotation_body",
        sa.Column("id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("pref_label", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("definition", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("alt_label", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.ForeignKeyConstraint(
            ["id"], ["annotation_body.id"], name="fk_etype_annotation_body_id_annotation_body"
        ),
        sa.PrimaryKeyConstraint("id", name="pk_etype_annotation_body"),
    )
    op.create_index(
        "ix_etype_annotation_body_pref_label", "etype_annotation_body", ["pref_label"], unique=True
    )
    op.drop_index(op.f("ix_etype_classification_updatedBy_id"), table_name="etype_classification")
    op.drop_index(op.f("ix_etype_classification_etype_class_id"), table_name="etype_classification")
    op.drop_index(op.f("ix_etype_classification_entity_id"), table_name="etype_classification")
    op.drop_index(op.f("ix_etype_classification_creation_date"), table_name="etype_classification")
    op.drop_index(op.f("ix_etype_classification_createdBy_id"), table_name="etype_classification")
    op.drop_table("etype_classification")
    op.drop_index(op.f("ix_etype_class_pref_label"), table_name="etype_class")
    op.drop_index(op.f("ix_etype_class_legacy_id"), table_name="etype_class")
    op.drop_index(op.f("ix_etype_class_creation_date"), table_name="etype_class")
    op.drop_table("etype_class")
    # ### end Alembic commands ###
