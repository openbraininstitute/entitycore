"""Default migration message

Revision ID: 034af9ff091f
Revises: 5861be61272f
Create Date: 2025-04-04 10:57:05.041840

"""

from collections.abc import Sequence

import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

from alembic import op

# revision identifiers, used by Alembic.
revision: str = "034af9ff091f"
down_revision: str | None = "5861be61272f"
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "electrical_recording_protocol",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("description", sa.String(), nullable=False),
        sa.Column("dt", sa.Float(), nullable=True),
        sa.Column("stimulus_type", sa.String(), nullable=False),
        sa.Column("recording_id", sa.Uuid(), nullable=False),
        sa.ForeignKeyConstraint(
            ["id"], ["entity.id"], name=op.f("fk_electrical_recording_protocol_id_entity")
        ),
        sa.ForeignKeyConstraint(
            ["recording_id"],
            ["electrical_cell_recording.id"],
            name=op.f("fk_electrical_recording_protocol_recording_id_electrical_cell_recording"),
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_electrical_recording_protocol")),
    )
    op.create_index(
        op.f("ix_electrical_recording_protocol_recording_id"),
        "electrical_recording_protocol",
        ["recording_id"],
        unique=False,
    )
    op.drop_index(
        "ix_electrical_recording_stimulus_creation_date", table_name="electrical_recording_stimulus"
    )
    op.drop_index(
        "ix_electrical_recording_stimulus_recording_id", table_name="electrical_recording_stimulus"
    )
    op.drop_table("electrical_recording_stimulus")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "electrical_recording_stimulus",
        sa.Column("id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("recording_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column(
            "creation_date",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "update_date",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column("protocol", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.ForeignKeyConstraint(
            ["recording_id"],
            ["electrical_cell_recording.id"],
            name="fk_electrical_recording_stimulus_recording_id_electrica_985a",
        ),
        sa.PrimaryKeyConstraint("id", name="pk_electrical_recording_stimulus"),
    )
    op.create_index(
        "ix_electrical_recording_stimulus_recording_id",
        "electrical_recording_stimulus",
        ["recording_id"],
        unique=False,
    )
    op.create_index(
        "ix_electrical_recording_stimulus_creation_date",
        "electrical_recording_stimulus",
        ["creation_date"],
        unique=False,
    )
    op.drop_index(
        op.f("ix_electrical_recording_protocol_recording_id"),
        table_name="electrical_recording_protocol",
    )
    op.drop_table("electrical_recording_protocol")
    # ### end Alembic commands ###
