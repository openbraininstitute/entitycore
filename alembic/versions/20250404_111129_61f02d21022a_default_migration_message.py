"""Default migration message

Revision ID: 61f02d21022a
Revises: 7182cf8f7b50
Create Date: 2025-04-04 11:11:29.085317

"""

from collections.abc import Sequence

import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

from alembic import op

# revision identifiers, used by Alembic.
revision: str = "61f02d21022a"
down_revision: str | None = "7182cf8f7b50"
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "ion",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column(
            "creation_date",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "update_date",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_ion")),
    )
    op.create_index(op.f("ix_ion_creation_date"), "ion", ["creation_date"], unique=False)
    op.create_index(op.f("ix_ion_name"), "ion", ["name"], unique=True)
    op.create_table(
        "ion_chanel_model",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("description", sa.String(), nullable=False),
        sa.Column("identifier", sa.String(), nullable=False),
        sa.Column("modelId", sa.String(), nullable=False),
        sa.Column("is_ljp_corrected", sa.Boolean(), nullable=False),
        sa.Column("is_temperature_dependent", sa.Boolean(), nullable=False),
        sa.Column("temperature_celsius", sa.Integer(), nullable=False),
        sa.Column("nmodl_parameters", postgresql.JSONB(astext_type=sa.Text()), nullable=False),
        sa.Column("description_vector", postgresql.TSVECTOR(), nullable=True),
        sa.Column("brain_region_id", sa.BigInteger(), nullable=False),
        sa.Column("species_id", sa.Uuid(), nullable=False),
        sa.Column("strain_id", sa.Uuid(), nullable=True),
        sa.ForeignKeyConstraint(
            ["brain_region_id"],
            ["brain_region.id"],
            name=op.f("fk_ion_chanel_model_brain_region_id_brain_region"),
        ),
        sa.ForeignKeyConstraint(["id"], ["entity.id"], name=op.f("fk_ion_chanel_model_id_entity")),
        sa.ForeignKeyConstraint(
            ["species_id"], ["species.id"], name=op.f("fk_ion_chanel_model_species_id_species")
        ),
        sa.ForeignKeyConstraint(
            ["strain_id", "species_id"],
            ["strain.id", "strain.species_id"],
            name="fk_ion_chanel_model_strain_id_species_id",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_ion_chanel_model")),
    )
    op.create_index(
        op.f("ix_ion_chanel_model_brain_region_id"),
        "ion_chanel_model",
        ["brain_region_id"],
        unique=False,
    )
    op.create_index(
        "ix_ion_chanel_model_description_vector",
        "ion_chanel_model",
        ["description_vector"],
        unique=False,
        postgresql_using="gin",
    )
    op.create_index(op.f("ix_ion_chanel_model_name"), "ion_chanel_model", ["name"], unique=False)
    op.create_index(
        op.f("ix_ion_chanel_model_species_id"), "ion_chanel_model", ["species_id"], unique=False
    )
    op.create_index(
        op.f("ix_ion_chanel_model_strain_id"), "ion_chanel_model", ["strain_id"], unique=False
    )
    op.create_table(
        "ion_channel_association",
        sa.Column("ion_id", sa.Uuid(), nullable=False),
        sa.Column("ion_channel_model_id", sa.Uuid(), nullable=False),
        sa.ForeignKeyConstraint(
            ["ion_channel_model_id"],
            ["ion_chanel_model.id"],
            name=op.f("fk_ion_channel_association_ion_channel_model_id_ion_chanel_model"),
        ),
        sa.ForeignKeyConstraint(
            ["ion_id"], ["ion.id"], name=op.f("fk_ion_channel_association_ion_id_ion")
        ),
        sa.PrimaryKeyConstraint(
            "ion_id", "ion_channel_model_id", name=op.f("pk_ion_channel_association")
        ),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("ion_channel_association")
    op.drop_index(op.f("ix_ion_chanel_model_strain_id"), table_name="ion_chanel_model")
    op.drop_index(op.f("ix_ion_chanel_model_species_id"), table_name="ion_chanel_model")
    op.drop_index(op.f("ix_ion_chanel_model_name"), table_name="ion_chanel_model")
    op.drop_index(
        "ix_ion_chanel_model_description_vector",
        table_name="ion_chanel_model",
        postgresql_using="gin",
    )
    op.drop_index(op.f("ix_ion_chanel_model_brain_region_id"), table_name="ion_chanel_model")
    op.drop_table("ion_chanel_model")
    op.drop_index(op.f("ix_ion_name"), table_name="ion")
    op.drop_index(op.f("ix_ion_creation_date"), table_name="ion")
    op.drop_table("ion")
    # ### end Alembic commands ###
