"""Default migration message

Revision ID: adc8aed0506d
Revises: 034af9ff091f
Create Date: 2025-04-04 11:33:30.265454

"""

from collections.abc import Sequence

import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

from alembic import op

# revision identifiers, used by Alembic.
revision: str = "adc8aed0506d"
down_revision: str | None = "034af9ff091f"
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    sa.Enum(
        "step",
        "ramp",
        "noise",
        "sinusoidal",
        "other",
        "unknown",
        name="electricalrecordingstimulusshape",
    ).create(op.get_bind())
    sa.Enum(
        "voltage_clamp",
        "current_clamp",
        "conductance_clamp",
        "extracellular",
        "other",
        "unknown",
        name="electricalrecordingstimulustype",
    ).create(op.get_bind())
    op.add_column(
        "electrical_recording_protocol",
        sa.Column(
            "stimulus_injection_type",
            postgresql.ENUM(
                "voltage_clamp",
                "current_clamp",
                "conductance_clamp",
                "extracellular",
                "other",
                "unknown",
                name="electricalrecordingstimulustype",
                create_type=False,
            ),
            nullable=False,
        ),
    )
    op.add_column(
        "electrical_recording_protocol",
        sa.Column(
            "stimuls_shape",
            postgresql.ENUM(
                "step",
                "ramp",
                "noise",
                "sinusoidal",
                "other",
                "unknown",
                name="electricalrecordingstimulusshape",
                create_type=False,
            ),
            nullable=False,
        ),
    )
    op.add_column(
        "electrical_recording_protocol", sa.Column("stimulus_start_time", sa.Float(), nullable=True)
    )
    op.add_column(
        "electrical_recording_protocol", sa.Column("stimulus_end_time", sa.Float(), nullable=True)
    )
    op.drop_column("electrical_recording_protocol", "stimulus_type")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "electrical_recording_protocol",
        sa.Column("stimulus_type", sa.VARCHAR(), autoincrement=False, nullable=False),
    )
    op.drop_column("electrical_recording_protocol", "stimulus_end_time")
    op.drop_column("electrical_recording_protocol", "stimulus_start_time")
    op.drop_column("electrical_recording_protocol", "stimuls_shape")
    op.drop_column("electrical_recording_protocol", "stimulus_injection_type")
    sa.Enum(
        "voltage_clamp",
        "current_clamp",
        "conductance_clamp",
        "extracellular",
        "other",
        "unknown",
        name="electricalrecordingstimulustype",
    ).drop(op.get_bind())
    sa.Enum(
        "step",
        "ramp",
        "noise",
        "sinusoidal",
        "other",
        "unknown",
        name="electricalrecordingstimulusshape",
    ).drop(op.get_bind())
    # ### end Alembic commands ###
