"""Default migration message

Revision ID: 55ed717e375b
Revises: b9b0436320bd
Create Date: 2025-04-10 13:08:26.296677

"""

from collections.abc import Sequence

import sqlalchemy as sa
from alembic_postgresql_enum import TableReference

from alembic import op

# revision identifiers, used by Alembic.
revision: str = "55ed717e375b"
down_revision: str | None = "b9b0436320bd"
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "age",
        sa.Column(
            "creation_date",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
    )
    op.add_column(
        "age",
        sa.Column(
            "update_date",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
    )
    op.create_index(op.f("ix_age_creation_date"), "age", ["creation_date"], unique=False)
    op.create_unique_constraint(
        "uq_subject", "subject", ["id", "species_id", "strain_id", "age_id", "sex", "weight"]
    )
    op.drop_constraint("fk_subject_strain_id_species_id", "subject", type_="foreignkey")
    op.sync_enum_values(
        enum_schema="public",
        enum_name="ageperiod",
        new_values=["prenatal", "postnatal"],
        affected_columns=[
            TableReference(table_schema="public", table_name="age", column_name="period")
        ],
        enum_values_to_rename=[],
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.sync_enum_values(
        enum_schema="public",
        enum_name="ageperiod",
        new_values=["pre_natal", "post_natal"],
        affected_columns=[
            TableReference(table_schema="public", table_name="age", column_name="period")
        ],
        enum_values_to_rename=[],
    )
    op.create_foreign_key(
        "fk_subject_strain_id_species_id",
        "subject",
        "strain",
        ["strain_id", "species_id"],
        ["id", "species_id"],
    )
    op.drop_constraint("uq_subject", "subject", type_="unique")
    op.drop_index(op.f("ix_age_creation_date"), table_name="age")
    op.drop_column("age", "update_date")
    op.drop_column("age", "creation_date")
    # ### end Alembic commands ###
