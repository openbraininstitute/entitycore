"""Default migration message

Revision ID: 1589bff44728
Revises: 8d1610d7c882
Create Date: 2025-05-26 22:23:51.082630

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from alembic_postgresql_enum import TableReference

from sqlalchemy import Text
import app.db.types

# revision identifiers, used by Alembic.
revision: str = "1589bff44728"
down_revision: Union[str, None] = "8d1610d7c882"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "memodel_calibration_result",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("holding_current", sa.Float(), nullable=False),
        sa.Column("threshold_current", sa.Float(), nullable=False),
        sa.Column("rin", sa.Float(), nullable=True),
        sa.Column("calibrated_entity_id", sa.Uuid(), nullable=False),
        sa.ForeignKeyConstraint(
            ["calibrated_entity_id"],
            ["memodel.id"],
            name=op.f("fk_memodel_calibration_result_calibrated_entity_id_memodel"),
        ),
        sa.ForeignKeyConstraint(
            ["id"], ["entity.id"], name=op.f("fk_memodel_calibration_result_id_entity")
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_memodel_calibration_result")),
    )
    op.create_index(
        op.f("ix_memodel_calibration_result_calibrated_entity_id"),
        "memodel_calibration_result",
        ["calibrated_entity_id"],
        unique=False,
    )
    op.drop_column("memodel", "holding_current")
    op.drop_column("memodel", "threshold_current")
    op.sync_enum_values(
        enum_schema="public",
        enum_name="entitytype",
        new_values=[
            "analysis_software_source_code",
            "brain_atlas",
            "brain_atlas_region",
            "emodel",
            "cell_composition",
            "memodel_calibration_result",
            "experimental_bouton_density",
            "experimental_neuron_density",
            "experimental_synapses_per_connection",
            "memodel",
            "mesh",
            "me_type_density",
            "reconstruction_morphology",
            "electrical_cell_recording",
            "electrical_recording_stimulus",
            "single_neuron_simulation",
            "single_neuron_synaptome",
            "single_neuron_synaptome_simulation",
            "ion_channel_model",
            "subject",
            "validation_result",
        ],
        affected_columns=[
            TableReference(table_schema="public", table_name="entity", column_name="type")
        ],
        enum_values_to_rename=[],
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.sync_enum_values(
        enum_schema="public",
        enum_name="entitytype",
        new_values=[
            "analysis_software_source_code",
            "brain_atlas",
            "brain_atlas_region",
            "emodel",
            "cell_composition",
            "experimental_bouton_density",
            "experimental_neuron_density",
            "experimental_synapses_per_connection",
            "memodel",
            "mesh",
            "me_type_density",
            "reconstruction_morphology",
            "electrical_cell_recording",
            "electrical_recording_stimulus",
            "single_neuron_simulation",
            "single_neuron_synaptome",
            "single_neuron_synaptome_simulation",
            "ion_channel_model",
            "subject",
            "validation_result",
        ],
        affected_columns=[
            TableReference(table_schema="public", table_name="entity", column_name="type")
        ],
        enum_values_to_rename=[],
    )
    op.add_column(
        "memodel",
        sa.Column(
            "threshold_current",
            sa.DOUBLE_PRECISION(precision=53),
            autoincrement=False,
            nullable=True,
        ),
    )
    op.add_column(
        "memodel",
        sa.Column(
            "holding_current", sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True
        ),
    )
    op.drop_index(
        op.f("ix_memodel_calibration_result_calibrated_entity_id"),
        table_name="memodel_calibration_result",
    )
    op.drop_table("memodel_calibration_result")
    # ### end Alembic commands ###
