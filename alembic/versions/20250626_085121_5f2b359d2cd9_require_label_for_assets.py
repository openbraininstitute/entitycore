"""require label for assets

Revision ID: 5f2b359d2cd9
Revises: f2a2c11cb9f3
Create Date: 2025-06-26 08:51:21.590162

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from alembic_postgresql_enum import TableReference
from sqlalchemy.dialects import postgresql

from sqlalchemy import Text
import app.db.types

# revision identifiers, used by Alembic.
revision: str = "5f2b359d2cd9"
down_revision: Union[str, None] = "f2a2c11cb9f3"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "asset",
        "label",
        existing_type=postgresql.ENUM(
            "neurolucida",
            "swc",
            "hdf5",
            "cell_composition_summary",
            "cell_composition_volumes",
            "single_neuron_synaptome_config",
            "single_neuron_synaptome_simulation_io_result",
            "single_cell_simulation_data",
            "sonata_circuit",
            "nwb",
            "neuron_hoc",
            "emodel_parametrization_optimization_output",
            "sonata_simulation_config",
            "simulation_generation_config",
            "custom_node_sets",
            "campaign_generation_config",
            "campaign_summary",
            "replay_spikes",
            "voltage_report",
            "spike_report",
            name="assetlabel",
        ),
        nullable=False,
    )
    op.sync_enum_values(
        enum_schema="public",
        enum_name="contenttype",
        new_values=[
            "application/json",
            "application/swc",
            "application/nrrd",
            "application/obj",
            "application/hoc",
            "application/asc",
            "application/abf",
            "application/nwb",
            "application/x-hdf5",
            "text/plain",
            "application/vnd.directory",
            "application/mod",
            "application/pdf",
            "image/png",
            "image/jpeg",
        ],
        affected_columns=[
            TableReference(table_schema="public", table_name="asset", column_name="content_type")
        ],
        enum_values_to_rename=[],
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.sync_enum_values(
        enum_schema="public",
        enum_name="contenttype",
        new_values=[
            "application/json",
            "application/swc",
            "application/nrrd",
            "application/obj",
            "application/hoc",
            "application/asc",
            "application/abf",
            "application/nwb",
            "application/x-hdf5",
            "text/plain",
            "application/vnd.directory",
            "application/mod",
            "application/pdf",
            "image/png",
            "image/jpeg",
            "application/octet-stream",
        ],
        affected_columns=[
            TableReference(table_schema="public", table_name="asset", column_name="content_type")
        ],
        enum_values_to_rename=[],
    )
    op.alter_column(
        "asset",
        "label",
        existing_type=postgresql.ENUM(
            "neurolucida",
            "swc",
            "hdf5",
            "cell_composition_summary",
            "cell_composition_volumes",
            "single_neuron_synaptome_config",
            "single_neuron_synaptome_simulation_io_result",
            "single_cell_simulation_data",
            "sonata_circuit",
            "nwb",
            "neuron_hoc",
            "emodel_parametrization_optimization_output",
            "sonata_simulation_config",
            "simulation_generation_config",
            "custom_node_sets",
            "campaign_generation_config",
            "campaign_summary",
            "replay_spikes",
            "voltage_report",
            "spike_report",
            name="assetlabel",
        ),
        nullable=True,
    )
    # ### end Alembic commands ###
