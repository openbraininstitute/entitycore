"""consortium

Revision ID: 992a74ce92fc
Revises: 8e3939ec21fa
Create Date: 2025-07-23 09:23:44.471762

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from alembic_postgresql_enum import TableReference

from sqlalchemy import Text
import app.db.types

# revision identifiers, used by Alembic.
revision: str = "992a74ce92fc"
down_revision: Union[str, None] = "8e3939ec21fa"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "consortium",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("alternative_name", sa.String(), nullable=False),
        sa.ForeignKeyConstraint(["id"], ["agent.id"], name=op.f("fk_consortium_id_agent")),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_consortium")),
    )
    op.sync_enum_values(
        enum_schema="public",
        enum_name="agenttype",
        new_values=["person", "organization", "consortium"],
        affected_columns=[
            TableReference(table_schema="public", table_name="agent", column_name="type")
        ],
        enum_values_to_rename=[],
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.sync_enum_values(
        enum_schema="public",
        enum_name="agenttype",
        new_values=["person", "organization"],
        affected_columns=[
            TableReference(table_schema="public", table_name="agent", column_name="type")
        ],
        enum_values_to_rename=[],
    )
    op.drop_table("consortium")
    # ### end Alembic commands ###
