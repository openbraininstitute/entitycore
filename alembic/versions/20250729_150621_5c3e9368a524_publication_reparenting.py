"""publication_reparenting

Revision ID: 5c3e9368a524
Revises: 6856ab93bd63
Create Date: 2025-07-29 15:06:21.204112

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from alembic_utils.pg_trigger import PGTrigger
from sqlalchemy import text as sql_text
from sqlalchemy.dialects import postgresql

from sqlalchemy import Text
import app.db.types

# revision identifiers, used by Alembic.
revision: str = "5c3e9368a524"
down_revision: Union[str, None] = "6856ab93bd63"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column("publication", sa.Column("created_by_id", sa.Uuid(), nullable=False))
    op.add_column("publication", sa.Column("updated_by_id", sa.Uuid(), nullable=False))
    op.add_column(
        "publication",
        sa.Column(
            "creation_date",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
    )
    op.add_column(
        "publication",
        sa.Column(
            "update_date",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
    )
    op.drop_index(
        op.f("ix_publication_description_vector"), table_name="publication", postgresql_using="gin"
    )
    op.drop_index(op.f("ix_publication_name"), table_name="publication")
    op.create_index(
        op.f("ix_publication_created_by_id"), "publication", ["created_by_id"], unique=False
    )
    op.create_index(
        op.f("ix_publication_creation_date"), "publication", ["creation_date"], unique=False
    )
    op.create_index(
        op.f("ix_publication_updated_by_id"), "publication", ["updated_by_id"], unique=False
    )
    op.create_unique_constraint("uq_publication_doi", "publication", ["DOI"])
    op.create_foreign_key(
        op.f("fk_publication_updated_by_id_agent"),
        "publication",
        "agent",
        ["updated_by_id"],
        ["id"],
    )
    op.create_foreign_key(
        op.f("fk_publication_created_by_id_agent"),
        "publication",
        "agent",
        ["created_by_id"],
        ["id"],
    )
    op.drop_column("publication", "name")
    op.drop_column("publication", "description")
    op.drop_column("publication", "description_vector")
    public_publication_publication_description_vector = PGTrigger(
        schema="public",
        signature="publication_description_vector",
        on_entity="public.publication",
        is_constraint=False,
        definition="BEFORE INSERT OR UPDATE ON public.publication FOR EACH ROW EXECUTE FUNCTION tsvector_update_trigger('description_vector', 'pg_catalog.english', 'description', 'name')",
    )
    op.drop_entity(public_publication_publication_description_vector)

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    public_publication_publication_description_vector = PGTrigger(
        schema="public",
        signature="publication_description_vector",
        on_entity="public.publication",
        is_constraint=False,
        definition="BEFORE INSERT OR UPDATE ON public.publication FOR EACH ROW EXECUTE FUNCTION tsvector_update_trigger('description_vector', 'pg_catalog.english', 'description', 'name')",
    )
    op.create_entity(public_publication_publication_description_vector)

    op.add_column(
        "publication",
        sa.Column("description_vector", postgresql.TSVECTOR(), autoincrement=False, nullable=True),
    )
    op.add_column(
        "publication", sa.Column("description", sa.VARCHAR(), autoincrement=False, nullable=False)
    )
    op.add_column(
        "publication", sa.Column("name", sa.VARCHAR(), autoincrement=False, nullable=False)
    )
    op.drop_constraint(
        op.f("fk_publication_created_by_id_agent"), "publication", type_="foreignkey"
    )
    op.drop_constraint(
        op.f("fk_publication_updated_by_id_agent"), "publication", type_="foreignkey"
    )
    op.drop_constraint("uq_publication_doi", "publication", type_="unique")
    op.drop_index(op.f("ix_publication_updated_by_id"), table_name="publication")
    op.drop_index(op.f("ix_publication_creation_date"), table_name="publication")
    op.drop_index(op.f("ix_publication_created_by_id"), table_name="publication")
    op.create_index(op.f("ix_publication_name"), "publication", ["name"], unique=False)
    op.create_index(
        op.f("ix_publication_description_vector"),
        "publication",
        ["description_vector"],
        unique=False,
        postgresql_using="gin",
    )
    op.drop_column("publication", "update_date")
    op.drop_column("publication", "creation_date")
    op.drop_column("publication", "updated_by_id")
    op.drop_column("publication", "created_by_id")
    # ### end Alembic commands ###
