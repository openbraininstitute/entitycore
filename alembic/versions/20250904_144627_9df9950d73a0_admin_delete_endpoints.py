"""admin_delete_endpoints

Revision ID: 9df9950d73a0
Revises: 02b804d687ee
Create Date: 2025-09-04 14:46:27.574729

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from alembic_postgresql_enum import TableReference

from sqlalchemy import Text
import app.db.types

# revision identifiers, used by Alembic.
revision: str = "9df9950d73a0"
down_revision: Union[str, None] = "02b804d687ee"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(op.f("fk_derivation_generated_id_entity"), "derivation", type_="foreignkey")
    op.create_foreign_key(
        op.f("fk_derivation_generated_id_entity"),
        "derivation",
        "entity",
        ["generated_id"],
        ["id"],
        ondelete="CASCADE",
    )
    op.drop_constraint(
        op.f("fk_generation_generation_entity_id_entity"), "generation", type_="foreignkey"
    )
    op.create_foreign_key(
        op.f("fk_generation_generation_entity_id_entity"),
        "generation",
        "entity",
        ["generation_entity_id"],
        ["id"],
    )
    op.sync_enum_values(
        enum_schema="public",
        enum_name="entitytype",
        new_values=[
            "analysis_software_source_code",
            "brain_atlas",
            "brain_atlas_region",
            "cell_composition",
            "electrical_cell_recording",
            "electrical_recording_stimulus",
            "emodel",
            "experimental_bouton_density",
            "experimental_neuron_density",
            "experimental_synapses_per_connection",
            "external_url",
            "ion_channel_model",
            "memodel",
            "mesh",
            "memodel_calibration_result",
            "me_type_density",
            "reconstruction_morphology",
            "simulation",
            "simulation_campaign",
            "simulation_campaign_generation",
            "simulation_execution",
            "simulation_result",
            "scientific_artifact",
            "single_neuron_simulation",
            "single_neuron_synaptome",
            "single_neuron_synaptome_simulation",
            "subject",
            "validation_result",
            "circuit",
        ],
        affected_columns=[
            TableReference(table_schema="public", table_name="entity", column_name="type")
        ],
        enum_values_to_rename=[],
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.sync_enum_values(
        enum_schema="public",
        enum_name="entitytype",
        new_values=[
            "analysis_software_source_code",
            "brain_atlas",
            "brain_atlas_region",
            "cell_composition",
            "electrical_cell_recording",
            "electrical_recording_stimulus",
            "emodel",
            "experimental_bouton_density",
            "experimental_neuron_density",
            "experimental_synapses_per_connection",
            "external_url",
            "ion_channel_model",
            "memodel",
            "mesh",
            "memodel_calibration_result",
            "me_type_density",
            "publication",
            "reconstruction_morphology",
            "simulation",
            "simulation_campaign",
            "simulation_campaign_generation",
            "simulation_execution",
            "simulation_result",
            "scientific_artifact",
            "single_neuron_simulation",
            "single_neuron_synaptome",
            "single_neuron_synaptome_simulation",
            "subject",
            "validation_result",
            "circuit",
        ],
        affected_columns=[
            TableReference(table_schema="public", table_name="entity", column_name="type")
        ],
        enum_values_to_rename=[],
    )
    op.drop_constraint(
        op.f("fk_generation_generation_entity_id_entity"), "generation", type_="foreignkey"
    )
    op.create_foreign_key(
        op.f("fk_generation_generation_entity_id_entity"),
        "generation",
        "entity",
        ["generation_entity_id"],
        ["id"],
        ondelete="CASCADE",
    )
    op.drop_constraint(op.f("fk_derivation_generated_id_entity"), "derivation", type_="foreignkey")
    op.create_foreign_key(
        op.f("fk_derivation_generated_id_entity"), "derivation", "entity", ["generated_id"], ["id"]
    )
    # ### end Alembic commands ###
