"""Update triggers

Revision ID: b89af5e363b9
Revises: b352b28dae67
Create Date: 2025-09-10 15:13:20.918399

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from alembic_utils.pg_trigger import PGTrigger
from sqlalchemy import text as sql_text

from sqlalchemy import Text
import app.db.types

# revision identifiers, used by Alembic.
revision: str = "b89af5e363b9"
down_revision: Union[str, None] = "b352b28dae67"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    public_ion_channel_ion_channel_description_vector = PGTrigger(
        schema="public",
        signature="ion_channel_description_vector",
        on_entity="public.ion_channel",
        is_constraint=False,
        definition="BEFORE INSERT OR UPDATE ON ion_channel\n            FOR EACH ROW EXECUTE FUNCTION\n                tsvector_update_trigger(description_vector, 'pg_catalog.english', description, name)",
    )
    op.create_entity(public_ion_channel_ion_channel_description_vector)

    public_electrical_recording_electrical_recording_description_vector = PGTrigger(
        schema="public",
        signature="electrical_recording_description_vector",
        on_entity="public.electrical_recording",
        is_constraint=False,
        definition="BEFORE INSERT OR UPDATE ON electrical_recording\n            FOR EACH ROW EXECUTE FUNCTION\n                tsvector_update_trigger(description_vector, 'pg_catalog.english', description, name)",
    )
    op.create_entity(public_electrical_recording_electrical_recording_description_vector)

    public_electrical_recording_electrical_cell_recording_description_vector = PGTrigger(
        schema="public",
        signature="electrical_cell_recording_description_vector",
        on_entity="public.electrical_recording",
        is_constraint=False,
        definition="BEFORE INSERT OR UPDATE ON public.electrical_recording FOR EACH ROW EXECUTE FUNCTION tsvector_update_trigger('description_vector', 'pg_catalog.english', 'description', 'name')",
    )
    op.drop_entity(public_electrical_recording_electrical_cell_recording_description_vector)

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    public_electrical_recording_electrical_cell_recording_description_vector = PGTrigger(
        schema="public",
        signature="electrical_cell_recording_description_vector",
        on_entity="public.electrical_recording",
        is_constraint=False,
        definition="BEFORE INSERT OR UPDATE ON public.electrical_recording FOR EACH ROW EXECUTE FUNCTION tsvector_update_trigger('description_vector', 'pg_catalog.english', 'description', 'name')",
    )
    op.create_entity(public_electrical_recording_electrical_cell_recording_description_vector)

    public_electrical_recording_electrical_recording_description_vector = PGTrigger(
        schema="public",
        signature="electrical_recording_description_vector",
        on_entity="public.electrical_recording",
        is_constraint=False,
        definition="BEFORE INSERT OR UPDATE ON electrical_recording\n            FOR EACH ROW EXECUTE FUNCTION\n                tsvector_update_trigger(description_vector, 'pg_catalog.english', description, name)",
    )
    op.drop_entity(public_electrical_recording_electrical_recording_description_vector)

    public_ion_channel_ion_channel_description_vector = PGTrigger(
        schema="public",
        signature="ion_channel_description_vector",
        on_entity="public.ion_channel",
        is_constraint=False,
        definition="BEFORE INSERT OR UPDATE ON ion_channel\n            FOR EACH ROW EXECUTE FUNCTION\n                tsvector_update_trigger(description_vector, 'pg_catalog.english', description, name)",
    )
    op.drop_entity(public_ion_channel_ion_channel_description_vector)

    # ### end Alembic commands ###
