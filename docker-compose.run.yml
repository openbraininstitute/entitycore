services:
  app:
    profiles: [run]
    image: "${IMAGE_NAME}:${IMAGE_TAG}"
    build:
      dockerfile: Dockerfile
      args:
      - ENVIRONMENT
      - APP_NAME
      - APP_VERSION
      - COMMIT_SHA
      tags:
      - "${IMAGE_NAME}:${IMAGE_TAG_ALIAS}"
    ports:
    - "127.0.0.1:8000:8000"
    env_file: .env.run-docker
    develop:
      watch:
      - action: sync+restart
        path: ./app
        target: /code/app
      - action: rebuild
        path: uv.lock
    depends_on:
      db:
        condition: service_healthy
      minio:
        condition: service_started

  db:
    profiles: [run]
    image: pgvector/pgvector:0.8.0-pg17-trixie
    environment:
    - POSTGRES_USER=entitycore
    - POSTGRES_PASSWORD=entitycore
    ports:
    - "127.0.0.1:5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 5s
      start_interval: 2s
    restart: unless-stopped
    volumes:
    - pgdata:/var/lib/postgresql/data
    - ./data:/data
    command:
    - postgres
#    - -clog_statement=all
    - -clog_min_duration_statement=100ms
    - -clog_lock_waits=on

  minio:
    image: minio/minio:latest
    environment:
      MINIO_ROOT_USER: entitycore
      MINIO_ROOT_PASSWORD: entitycore
    ports:
      - 127.0.0.1:9000:9000
      - 127.0.0.1:9001:9001
    volumes:
    - s3data:/data
    entrypoint: sh
    command:
      - -cx
      - |
        mkdir -p /data/entitycore-data-dev &&
        minio server /data --console-address :9001

volumes:
  pgdata: {}
  s3data: {}
