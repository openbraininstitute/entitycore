services:
  app:
    profiles: [run]
    image: "${IMAGE_NAME}:${IMAGE_TAG}"
    build:
      dockerfile: Dockerfile
      args:
      - ENVIRONMENT
      - APP_NAME
      - APP_VERSION
      - COMMIT_SHA
    ports:
    - "127.0.0.1:8100:8000"
    environment:
    - APP_DEBUG=true
    develop:
      watch:
      - action: sync+restart
        path: ./app
        target: /code/app
      - action: rebuild
        path: uv.lock
    depends_on:
      db:
        condition: service_healthy

  db:
    profiles: [run]
    image: postgres:16-alpine
    environment:
    - POSTGRES_USER=test
    - POSTGRES_PASSWORD=test
    ports:
    - "127.0.0.1:5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U test"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 5s
      start_interval: 1s
    restart: unless-stopped
    volumes:
    - pgdata:/var/lib/postgresql/data
    command:
    - postgres
#    - -clog_statement=all
    - -clog_min_duration_statement=100ms
    - -clog_lock_waits=on

volumes:
  pgdata: {}
